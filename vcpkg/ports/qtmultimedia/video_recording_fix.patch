From c6a80aaa8afcee1d861d892dee8035252c251eef Mon Sep 17 00:00:00 2001
From: Tim Blechmann <tim.blechmann@qt.io>
Date: Mon, 6 Jan 2025 18:14:03 +0800
Subject: [PATCH] FFmpeg: take audio channel count / sample rate into account
MIME-Version: 1.0
Content-Type: text/plain; charset=utf8
Content-Transfer-Encoding: 8bit

QMediaEncoderSettings contain settings for sampling rate and channel
count, but these values have never been applied to the codec. Therefore
sampling rate / channel count of the resulting medium were always taken
from the input device.

Change-Id: I8bceae576a010167fc152eb8cfd453ba93d395ce
Reviewed-by: Artem Dyomin <artem.dyomin@qt.io>
Reviewed-by: JÃ¸ger HansegÃ¥rd <joger.hansegard@qt.io>
(cherry picked from commit 355a6dffc64c422c57a7e3be7a80012eaaf5eb83)
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>
(cherry picked from commit 270e9c06de748d607fa512632749cb1d9f4647e6)
---
 .../recordingengine/qffmpegencoderoptions.cpp      | 21 ++++++++++++
 .../tst_qmediarecorderbackend.cpp                  | 40 ++++++++++++++++++++--
 2 files changed, 59 insertions(+), 2 deletions(-)

diff --git a/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp b/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp
index b374524ef4..3f66c2dcb0 100644
--- a/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp
+++ b/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp
@@ -2,10 +2,16 @@
 // SPDX-License-Identifier: LicenseRef-Qt-Commercial OR LGPL-3.0-only OR GPL-2.0-only OR GPL-3.0-only
 #include "qffmpegencoderoptions_p.h"
 
+#include "qffmpegmediaformatinfo_p.h"
+
+#include <QtMultimedia/qaudioformat.h>
+
 #if QT_CONFIG(vaapi)
 #include <va/va.h>
 #endif
 
+#include <libavutil/channel_layout.h>
+
 QT_BEGIN_NAMESPACE
 
 // unfortunately there is no common way to specify options for the encoders. The code here tries to map our settings sensibly
@@ -348,6 +354,21 @@ void applyAudioEncoderOptions(const QMediaEncoderSettings &settings, const QByte
     if (settings.encodingMode() == QMediaRecorder::ConstantBitRateEncoding || settings.encodingMode() == QMediaRecorder::AverageBitRateEncoding)
         codec->bit_rate = settings.audioBitRate();
 
+    if (settings.audioSampleRate() != -1)
+        codec->sample_rate = settings.audioSampleRate();
+
+    if (settings.audioChannelCount() != -1) {
+        auto mask = QFFmpegMediaFormatInfo::avChannelLayout(
+                QAudioFormat::defaultChannelConfigForChannelCount(settings.audioChannelCount()));
+
+#if QT_FFMPEG_HAS_AV_CHANNEL_LAYOUT
+        av_channel_layout_from_mask(&codec->ch_layout, mask);
+#else
+        codec->channel_layout = mask;
+        codec->channels = qPopulationCount(codec->channel_layout);
+#endif
+    }
+
     auto *table = audioCodecOptionTable;
     while (table->name) {
         if (codecName == table->name) {


From 8a18d465152d93f2fbb0d670505dc7320e979265 Mon Sep 17 00:00:00 2001
From: Bartlomiej Moskal <bartlomiej.moskal@qt.io>
Date: Fri, 21 Feb 2025 15:09:29 +0100
Subject: [PATCH] MediaCodec: Do not set level value for H265 Video Codec
MIME-Version: 1.0
Content-Type: text/plain; charset=utf8
Content-Transfer-Encoding: 8bit

The level value in FFmpeg is used to specify the compression constraints
for an H.265/HEVC-encoded video. While values mapped in the array seems
to be correct[0], they are not recognized by avcodec_open2() method.

It seems that this is a regression[1] on ffmpeg side. It is already
fixed[2], but the ffmpeg package from 7.1 tag doesn't contain the fix.
The fix is already on release/7.1 branch.

This fix uses avcodec_version() method to filter out not working FFmpeg
versions.

[0]https://github.com/FFmpeg/FFmpeg/blob/2066c5526d27168144db059c344df58ed5942aa3/libavcodec/mediacodecenc.c#L1241
[1]https://github.com/FFmpeg/FFmpeg/commit/7753a9d62725d5bd8313e2d249acbe1c8af79ab1
[2]https://github.com/FFmpeg/FFmpeg/commit/020d9f2b4886aa620252da4db7a4936378d6eb3a

Fixes: QTBUG-133773
Change-Id: I4f5051c14bf0523e383a7a0969cc50b131a96b2b
Reviewed-by: JÃ¸ger HansegÃ¥rd <joger.hansegard@qt.io>
Reviewed-by: Artem Dyomin <artem.dyomin@qt.io>
(cherry picked from commit a773b7a3aea656cbbff14dcd627852096ba48632)
Reviewed-by: Qt Cherry-pick Bot <cherrypick_bot@qt-project.org>
(cherry picked from commit b2489f7d72e1eda84ad4591387245b8afc2c3799)
---
 .../ffmpeg/recordingengine/qffmpegencoderoptions.cpp     | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp b/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp
index 3f66c2dcb0..d7ecfefd57 100644
--- a/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp
+++ b/src/plugins/multimedia/ffmpeg/recordingengine/qffmpegencoderoptions.cpp
@@ -10,6 +10,12 @@
 #include <va/va.h>
 #endif
 
+#ifdef Q_OS_ANDROID
+extern "C" {
+#include <libavcodec/avcodec.h>
+}
+#endif
+
 #include <libavutil/channel_layout.h>
 
 QT_BEGIN_NAMESPACE
@@ -276,8 +282,14 @@ static void apply_mediacodec(const QMediaEncoderSettings &settings, AVCodecConte
         break;
     }
     case QMediaFormat::VideoCodec::H265: {
-        const char *levels[] = { "h2.1", "h3.1", "h4.1", "h5.1", "h6.1" };
-        av_dict_set(opts, "level", levels[settings.quality()], 1);
+        // Set the level only for FFmpeg versions that correctly recognize level values.
+        // Affected revisions: from n7.1 https://github.com/FFmpeg/FFmpeg/commit/7753a9d62725d5bd8313e2d249acbe1c8af79ab1
+        // up to https://github.com/FFmpeg/FFmpeg/commit/020d9f2b4886aa620252da4db7a4936378d6eb3a
+        if (avcodec_version() < 4000612 || avcodec_version() > 4002660) {
+            const char *levels[] = { "h2.1", "h3.1", "h4.1", "h5.1", "h6.1" };
+            av_dict_set(opts, "level", levels[settings.quality()], 1);
+        }
+
         codec->profile = FF_PROFILE_HEVC_MAIN;
         break;
     }
-- 
2.16.3

